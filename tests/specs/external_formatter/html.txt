== should format html in html`...` ==
let htmlString = html`<body><header>HEADER</header><main>Hello there!</main><footer>FOOTER</footer></body>`;
[expect]
let htmlString = html`
    <body>
        <header>HEADER</header>
        <main>Hello there!</main>
        <footer>FOOTER</footer>
    </body>
`;

== should format html in html`...` with multiple quasis ==
htmlString = html`<body><header>${header}</header><main>${main}</main><footer>${footer}</footer></body>`;
[expect]
htmlString = html`
    <body>
        <header>${header}</header>
        <main>${main}</main>
        <footer>${footer}</footer>
    </body>
`;

== should format nested html templates with correct indent level ==
export const Layout = (props: Props) => html`
  <html>
    <body>
      ${props.title.endsWith("example")
        ? html`
            <a href="/">Reactive Mastro examples</a>
            <h1>${props.title}</h1>
            `
        : ""}
      <main>${props.children}</main>
    </body>
  </html>
  `;
[expect]
export const Layout = (props: Props) =>
    html`
        <html>
            <body>
                ${props.title.endsWith("example")
                    ? html`
                        <a href="/">Reactive Mastro examples</a>
                        <h1>${props.title}</h1>
                    `
                    : ""}
                <main>${props.children}</main>
            </body>
        </html>
    `;
